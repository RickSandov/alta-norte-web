---
import { Logo } from './shared';

interface Props {
  translations: any;
}

const { translations } = Astro.props;
---

<section id="contacto" class="py-24 bg-surface relative overflow-hidden" data-animate>
  <!-- Background texture -->
  <div class="absolute inset-0 opacity-10">
    <svg viewBox="0 0 1200 800" class="w-full h-full">
      <defs>
        <pattern id="contact-pattern" x="0" y="0" width="40" height="40" patternUnits="userSpaceOnUse">
          <circle cx="20" cy="20" r="1" fill="currentColor" opacity="0.3"/>
        </pattern>
      </defs>
      <rect width="100%" height="100%" fill="url(#contact-pattern)"/>
    </svg>
  </div>

  <div class="relative max-w-7xl mx-auto px-6 lg:px-8">
    <div class="grid lg:grid-cols-2 gap-16">
      
      <!-- Left Content - Contact Info -->
      <div class="space-y-12" data-animate-delay="100">
        <div class="space-y-6">
          <h2 class="text-4xl lg:text-6xl font-bold text-white leading-tight">
            {translations.contact.title}
          </h2>
          
          <p class="text-xl text-gray-300 leading-relaxed max-w-lg">
            {translations.contact.description}
          </p>
        </div>

        <!-- Contact Information -->
        <div class="space-y-8">
          <h3 class="text-2xl font-bold text-white mb-6 tracking-wide">
            {translations.contact.section_title}
          </h3>
          
          <!-- Phone -->
          <div class="flex items-center space-x-4" data-animate-delay="200">
            <div class="w-12 h-12 bg-primary/20 rounded-full flex items-center justify-center border border-primary/30">
              <svg class="w-6 h-6 text-primary-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
              </svg>
            </div>
            <div>
              <p class="text-gray-400 text-sm">{translations.contact.info.phone}</p>
              <p class="text-white text-lg font-medium">{translations.contact.details.phone}</p>
            </div>
          </div>
          
          <!-- Email -->
          <div class="flex items-center space-x-4" data-animate-delay="300">
            <div class="w-12 h-12 bg-primary/20 rounded-full flex items-center justify-center border border-primary/30">
              <svg class="w-6 h-6 text-primary-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
              </svg>
            </div>
            <div>
              <p class="text-gray-400 text-sm">{translations.contact.info.email}</p>
              <p class="text-white text-lg font-medium">{translations.contact.details.email}</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Content - Contact Form -->
      <div class="space-y-8" data-animate-delay="200">
        <form class="space-y-6" onsubmit="handleSubmit(event)">
          <!-- Name Field -->
          <div class="space-y-2">
            <label for="name" class="sr-only">{translations.contact.form.name}</label>
            <input 
              type="text" 
              id="name" 
              name="name"
              placeholder={translations.contact.form.name}
              required
              class="w-full px-6 py-4 bg-white/5 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 hover:bg-white/10"
            />
          </div>

          <!-- Email Field -->
          <div class="space-y-2">
            <label for="email" class="sr-only">{translations.contact.form.email}</label>
            <input 
              type="email" 
              id="email" 
              name="email"
              placeholder={translations.contact.form.email}
              required
              class="w-full px-6 py-4 bg-white/5 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 hover:bg-white/10"
            />
          </div>

          <!-- Message Field -->
          <div class="space-y-2">
            <label for="message" class="sr-only">{translations.contact.form.message}</label>
            <textarea 
              id="message" 
              name="message"
              placeholder={translations.contact.form.message}
              rows="6"
              required
              class="w-full px-6 py-4 bg-white/5 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-300 hover:bg-white/10 resize-none"
            ></textarea>
          </div>

          <!-- Submit Button -->
          <button 
            type="submit"
            class="w-full bg-primary hover:bg-primary-700 text-white font-semibold py-4 px-8 rounded-lg transition-all duration-300 hover:scale-[1.02] hover:shadow-xl focus:outline-none focus:ring-4 focus:ring-primary/30"
          >
            {translations.contact.form.submit}
          </button>
        </form>
      </div>
    </div>

    <!-- Bottom Logo -->
    <div class="text-center mt-20" data-animate-delay="400">
      <div class="inline-flex items-center space-x-4">
        <!-- Real Logo -->
        <Logo 
          variant="isologo" 
          width={64}
          height={80}
          className="filter brightness-0 invert"
        />
        <div class="text-left">
          <p class="text-white font-bold text-lg">RESERVA</p>
          <p class="text-white text-3xl font-bold">ALTA NORTE</p>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ translations }}>
  function handleSubmit(event) {
    event.preventDefault();
    
    // Get form data
    const formData = new FormData(event.target);
    const name = formData.get('name');
    const email = formData.get('email');
    const message = formData.get('message');
    
    // Simple validation
    if (!name || !email || !message) {
      alert(translations.contact.error);
      return;
    }
    
    // Show success message
    alert(translations.contact.success);
    
    // Reset form
    event.target.reset();
    
    // In a real implementation, you would send this data to your backend
    console.log('Form submission:', { name, email, message });
  }
</script>
